@model CRUDModal.DataAccess.Params.EmployeeParam
@{
    ViewBag.Title = "Create";
}


    <div class="col-md-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2>Create Employee</h2>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                    </li>
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-wrench"></i></a>
                        <ul class="dropdown-menu" role="menu">
                            <li>
                                <a href="#">Settings 1</a>
                            </li>
                            <li>
                                <a href="#">Settings 2</a>
                            </li>
                        </ul>
                    </li>
                    <li>
                        <a class="close-link"><i class="fa fa-close"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <div class="col-md-9">
                <!-- start form for validation -->
                    <form method="post" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()
                        <label>First Name :</label>
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        <br />
                        <label>Last Name :</label>
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        <br />
                        <label>Age :</label>
                        @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                        <br />
                        <label>Gender :</label>
                        @Html.DropDownList("Gender", new List<SelectListItem>
                                                {
                                                    new SelectListItem {Text ="Choose...", Value="" },
                                                    new SelectListItem {Text ="Male", Value="Male" },
                                                    new SelectListItem {Text ="Female", Value="Female" }
                                                }, new { @class = "form-control" })
                        <br />
                        <label>Foto :</label>
                        <div class="col-md-12">
                            <div class="col-md-10">
                                <img src="~/Images/Model.Foto" style="margin:10px" height="120" width="120" id="imagePreview" />
                                <input type="file" name="Foto" id="Foto" onchange="ShowImagePreview(this,document.getElementById('imagePreview'))" />
                            </div>                          
                        </div>                        
                        <br />
                        <br />
                        <label>Salary :</label>
                        @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                        <br />
                        <label>Address :</label>
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        <br />
                        <label>Email :</label>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        <br />
                        <label>Password :</label>
                        @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control", @type="password" } })
                        <br />
                        <label>Department :</label>                        
                            @Html.DropDownListFor(model => model.Departments, ViewBag.RoleList as SelectList, "Choose Department...", new { @class = "form-control" })
                       
                        <br />
                        <label>Role :</label>                        
                            @Html.DropDownListFor(model => model.Roles, ViewBag.RoleList as SelectList, "Choose Role...", new { @class = "form-control" })
                        
                        <br />
                        <div class="ln_solid"></div>
                        <div class="form-group">
                            <div class="col-md-9 col-sm-12 col-xs-12 col-md-offset-3">
                                <a type="button" class="btn btn-primary" href="@Url.Action("Index","Employees")">Cancel</a>
                                <button type="submit" class="btn btn-success">Submit</button>
                            </div>
                        </div>
                    </form>
                </div>
                <!-- end form for validations -->
            </div>
        </div>

    </div>

<script>
    function ShowImagePreview(imageUploader, previewImage) {
    if (imageUploader.files && imageUploader.files[0]) {
        var reader = new FileReader();
        reader.onload = function (e) {
            $(previewImage).attr('src', e.target.result);
        }
        reader.readAsDataURL(imageUploader.files[0]);
    }
}
</script>









    @*<form method="post" enctype="multipart/form-data">
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.HiddenFor(model => model.Foto)

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Foto, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <img src="~/Images/Model.Foto" style="margin:10px" height="200" width="200" id="imagePreview" />
                        <input type="file" name="ImageUpload" id="ImageUpload" onchange="ShowImagePreview(this,document.getElementById('imagePreview'))" />
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Gender", new List<SelectListItem>
                                                {
                                                    new SelectListItem {Text ="--Pilih Gender--", Value="" },
                                                    new SelectListItem {Text ="Laki-laki", Value="Laki-laki" },
                                                    new SelectListItem {Text ="Perempuan", Value="Perempuan" }
                                                }, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Roles, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Roles, ViewBag.RoleList as SelectList, "--Select Role--", new { @class = "form-control" })

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                        <a class="btn btn-warning" href="@Url.Action("Index","Employees")"> Back</a>
                    </div>
                </div>
            </div>
        </form>

        <script src="~/Scripts/Scriptss.js"></script>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }*@




